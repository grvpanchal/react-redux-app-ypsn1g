import React from 'react';
import { renderToString } from 'react-dom/server';
import { ChunkExtractor } from '@loadable/server';

import App from './src/components/App';
const fs = require('fs')
const path = require('path')
const express = require('express')

const { createStore } = require('redux');
const { rootReducer } = require('./server.config');

const store = createStore(rootReducer);

// This is the stats file generated by webpack loadable plugin
const statsFile = path.resolve('./build/loadable-stats.json')
// We create an extractor from the statsFile
const extractor = new ChunkExtractor({ statsFile })
// Wrap your application using "collectChunks"
const jsx = extractor.collectChunks(<App store={store} />)
// Render your application

const port = 3000
const app = express()
app.use(express.static('build', { index: false }))

const indexHTML = fs.readFileSync('./public/index.html', { encoding: 'utf8', flag: 'r' });

app.get('/', async (req, res) => {
    const outputReactDom = renderToString(jsx);
    const outputHTML = indexHTML
        .replace(
            /(<div id="root"><\/div>)/igm,
            `
            <div id="root">${outputReactDom}</div>
            <script type="systemjs-module" src="/static/js/main.system.js"></script>
        `);
    
    res.send(outputHTML)
})

app.listen(port, () => {
  console.log(`SystemJS SSR app listening at http://localhost:${port}`)
})